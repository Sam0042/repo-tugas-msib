Advanced SELECTs
Worksheet 3

Nama	: Muhammad Hisyam Mubarak

SOAL 3.1

Tampilkan produk yang asset nya diatas 20jt
MariaDB [dbtoko1]> SELECT SUM(harga_beli * stok) as total from produk; //menghitung total asset
MariaDB [dbtoko1]> SELECT * FROM produk WHERE harga_beli * stok > 20000000; ini yang betul

SELECT ...
Tampilkan data produk beserta selisih stok dengan minimal stok
MariaDB [dbtoko1]> SELECT SUM(stok - min_stok) as selisih from produk;
Tampilkan total asset produk secara keseluruhan
MariaDB [dbtoko1]> SELECT sum(stok) as total_asset from produk;
Tampilkan data pelanggan yang lahirnya antara tahun 1980 sampai 1990
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir) BETWEEN 1999 AND 2004;
Tampilkan data pelanggan yang lahirnya tahun 1998
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE YEAR(tgl_lahir)=1998;
Tampilkan data pelanggan yang berulang tahun bulan agustus
MariaDB [dbtoko1]> SELECT * FROM pelanggan WHERE MONTH(tgl_lahir)=08;
Tampilkan data pelanggan : nama, tmp_lahir, tgl_lahir dan umur (selisih tahun sekarang dikurang tahun kelahiran)
MariaDB [dbtoko1]> SELECT nama, tmp_lahir, tgl_lahir, (YEAR(NOW())-YEAR(tgl_lahir)) AS umur FROM pelanggan;

SOAL 3.2

Berapa jumlah pelanggan yang tahun lahirnya 1998
SELECT COUNT(*) FROM pelanggan WHERE YEAR(tgl_lahir)=1998;
Berapa jumlah pelanggan perempuan yang tempat lahirnya di Jakarta
SELECT COUNT(*) FROM pelanggan WHERE jk='P' AND tmp_lahir='Jakarta';
Berapa jumlah total stok semua produk yang harga jualnya dibawah 10rb
SELECT SUM(stok) AS jumlah_total_stok FROM produk WHERE harga_jual < 10000; 
Ada berapa produk yang mempunyai kode awal K
SELECT COUNT(*) AS jumlah FROM produk WHERE kode LIKE 'K%';
Berapa harga jual rata-rata produk yang diatas 1jt
SELECT AVG(harga_jual) AS rata_rata FROM produk WHERE harga_jual > 1000000;
Tampilkan jumlah stok yang paling besar
SELECT MAX(stok) AS jumlah_max_stok FROM produk;
Ada berapa produk yang stoknya kurang dari minimal stok
SELECT COUNT(*) AS jumlah FROM produk WHERE stok<min_stok;
Berapa total asset dari keseluruhan produk
SELECT SUM(stok) AS asset FROM produk;

SOAL 3.3

Tampilkan data produk : id, nama, stok dan informasi jika stok telah sampai batas minimal atau kurang dari minimum stok dengan informasi ‘segera belanja’ jika tidak ‘stok aman’.
SELECT id,nama,stok, CASE WHEN stok > min_stok THEN 'Stok Aman' ELSE 'Segera Belanja' END AS informasi FROM produk;
Tampilkan data pelanggan: id, nama, umur dan kategori umur : jika umur < 17 → ‘muda’ , 17-55 → ‘Dewasa’, selainnya ‘Tua’
SELECT id,nama,(YEAR(NOW())-YEAR(tgl_lahir)) AS umur,
    -> case
    -> when (year(now())-year(tgl_lahir)) < 17 then 'muda'
    -> when (year(now())-year(tgl_lahir)) between 17 and 55 then 'dewasa'
    -> else 'tua'
    -> end as keterangan
    -> from pelanggan;
Tampilkan data produk: id, kode, nama, dan bonus untuk kode ‘TV01’ →’DVD Player’ , ‘K001’ → ‘Rice Cooker’ selain dari diatas ‘Tidak Ada’
SELECT id,kode,nama,
    -> case
    -> when kode = 'TV01' then 'DVD Player'
    -> when kode = 'K001' then 'Rice Cooker'
    -> else 'tidak ada'
    -> end as bonus
    -> from produk;



SOAL 3.4

Tampilkan data statistik jumlah tempat lahir pelanggan
select tmp_lahir, count(*) as jumlah from pelanggan group by tmp_lahir;
Tampilkan jumlah statistik produk berdasarkan jenis produk
select nama, count(*) as jumlah from produk group by jenis_produk_id;
Tampilkan data pelanggan yang usianya dibawah rata usia pelanggan
select * from pelanggan where (year(now())-year(tgl_lahir)) <
    -> (select avg(year(now())-year(tgl_lahir)) from pelanggan);
Tampilkan data produk yang harganya diatas rata-rata harga produk
select * from produk where harga_jual > (select avg(harga_jual) from produk);
Tampilkan data pelanggan yang memiliki kartu dimana iuran tahunan kartu diatas 90rb
select * from pelanggan
    -> join kartu on pelanggan.id = kartu.id
    -> where kartu.iuran > 90000;
Tampilkan statistik data produk dimana harga produknya dibawah rata-rata harga produk secara keseluruhan
select * from produk where harga_jual < (select avg(harga_jual) from produk);
Tampilkan data pelanggan yang memiliki kartu dimana diskon kartu yang diberikan diatas 3%
select * from pelanggan
    -> join kartu on pelanggan.id = kartu.id
    -> where kartu.diskon > 3;

